@model _4PsPH.Models.RegisterViewModel

@{
    ViewBag.Title = "Accounts";

    var options = new List<SelectListItem>();
    options.Add(new SelectListItem { Text = "Yes", Value = "true" });
    options.Add(new SelectListItem { Text = "No", Value = "false" });
}

<div class="row">
    <div class="col-md-4 left-ui">
        <a href="@Url.Action("Accounts")" class="outside-link">« Back to List</a>

        <hr class="heading-cut" />
    </div>
</div>

<div class="row">
    <div class="col-md-12" style="padding:0px;">
        <div class="col-md-4" style="padding:0px;">
            <div class="shadow-wrapper">
                <div class="row">
                    <div class="window-heading">
                        <div class="col-md-12">
                            <div class="links">
                                <strong>
                                    @ViewBag.Title &emsp;»&emsp;Create User Account
                                </strong>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="window">
                        <div class="col-md-12">
                            @using (Html.BeginForm("Create", "Admin", FormMethod.Post, new { @id = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary("", new { @class = "text-danger" })

                                <div class="form-horizontal">
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.GivenName, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.GivenName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.GivenName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <label>Select Role:</label>
                                            @Html.DropDownList("UserRoles", (SelectList)ViewBag.RoleList, new { @class = "form-control equilife-input" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <label>Select City:</label>
                                            @Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="window-footer window-footer-btn">
                    <div class="col-md-12" style="text-align:right;">
                        <button class="btn btn-primary" type="submit" form="form">Create</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
