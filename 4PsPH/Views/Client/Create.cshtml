@model _4PsPH.Models.Person

@{
    ViewBag.Title = "Client";

    var options = new List<SelectListItem>();
    options.Add(new SelectListItem { Text = "No", Value = "false" });
    options.Add(new SelectListItem { Text = "Yes", Value = "true" });

    var gender = new List<SelectListItem>();
    gender.Add(new SelectListItem { Text = "Male", Value = "1" });
    gender.Add(new SelectListItem { Text = "Female", Value = "0" });
}

<div class="row">
    <div class="col-md-8 left-ui">
        <a href="@Url.Action("Details","Households", new { id=Model.HouseholdId })" class="outside-link">« Back to Household</a>

        <hr class="heading-cut" />
    </div>
</div>

<div class="row">
    <div class="col-md-12" style="padding:0px;">
        <div class="col-md-8" style="padding:0px;">
            <div class="shadow-wrapper">
                <div class="row">
                    <div class="window-heading">
                        <div class="col-md-12">
                            <div class="links">
                                <strong>
                                    @ViewBag.Title &emsp;»&emsp;Create Client
                                </strong>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="window">
                        <div class="col-md-12">
                            @using (Html.BeginForm("Create", "Client", FormMethod.Post, new { @id = "form" }))
                            {
                                @Html.AntiForgeryToken()

                                @Html.HiddenFor(model => model.HouseholdId)
                                @Html.HiddenFor(model => model.IsBeneficiary)
                                @Html.HiddenFor(model => model.IsParentLeader, new { @value = "false" })

                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.GivenName, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.GivenName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.GivenName, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-4">
                                            <label class="control-label">Middle Name</label>
                                            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(model => model.Gender, gender, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-4">
                                            <label>Occupation</label>
                                            @Html.DropDownList("OccupationId", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.OccupationId, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-4">
                                            <label>Educational Attainment</label>
                                            @Html.DropDownList("EducationalAttainmentId", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.EducationalAttainmentId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-6">
                                            <label>Birth Date</label>
                                            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-6">
                                            <label>Age</label>
                                            <input class="age form-control" readonly/>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-6">
                                            <label>Beneficiary?</label>
                                            <input class="form-control beneficiary-display" readonly />
                                            @Html.ValidationMessageFor(model => model.IsBeneficiary, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-6">
                                            <label>Grantee?</label>
                                            @Html.DropDownListFor(model => model.IsGrantee, options, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.IsGrantee, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-6">
                                            <label>Relation to Grantee</label>
                                            @Html.DropDownList("RelationToGranteeId", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.RelationToGranteeId, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-6">
                                            <label>Excluded?</label>
                                            @Html.DropDownListFor(model => model.IsExcluded, options, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.IsExcluded, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-6">
                                            <label>Enrolled At</label>
                                            @Html.DropDownList("SchoolId", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SchoolId, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-6">
                                            <label>Hospital</label>
                                            @Html.DropDownList("HospitalId", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.HospitalId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="window-footer window-footer-btn">
                    <div class="col-md-12" style="text-align:right;">
                        <button class="btn btn-primary" type="submit" form="form">Create</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section styles{
    <style>
        .form-group{
            margin-bottom:20px;
        }
    </style>    
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    <script>
        $(document).ready(function () {
            $('.datepicker').datetimepicker({
                format: 'MM/DD/YYYY',
                widgetPositioning: {
                    horizontal: 'auto',
                    vertical: 'bottom'
                },
                maxDate: moment()
            });
        });

        $(".datepicker").on("dp.change", function (e) {
            var today = new Date();
            var birthDate = new Date($("#BirthDate").val());

            var age = today.getFullYear() - birthDate.getFullYear();
            var m = today.getMonth() - birthDate.getMonth();
            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
                age--;
            }

            $(".age").val(age);

            if (age <= 18) {
                $("#IsBeneficiary").val("true");
                $(".beneficiary-display").val("Yes");
            }

            if (age>18) {
                $("#IsBeneficiary").val("false");
                $(".beneficiary-display").val("No");
            }
        });
    </script>
}
