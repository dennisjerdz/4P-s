@model _4PsPH.Models.Hospital
@using _4PsPH.Extensions;

@{
    ViewBag.Title = "Hospitals";

    var options = new List<SelectListItem>();
    options.Add(new SelectListItem { Text = "Yes", Value = "true" });
    options.Add(new SelectListItem { Text = "No", Value = "false" });
}

<div class="row">
    <div class="col-md-10 left-ui">
        <a href="@Url.Action("Index")" class="outside-link">« Back to List</a>
    </div>
</div>

<hr class="heading-cut" />

<div class="row">
    <div class="col-md-12" style="padding:0px;">
        <div class="col-md-4" style="padding:0px;">
            <div class="shadow-wrapper">
                <div class="row">
                    <div class="window-heading">
                        <div class="col-md-12">
                            <div class="links">
                                <strong>
                                    @ViewBag.Title &emsp;»&emsp;Add Hospital
                                </strong>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="window">
                        <div class="col-md-12">
                            @using (Html.BeginForm("Create", "Hospitals", FormMethod.Post, new { @id = "form" }))
                            {
                                @Html.AntiForgeryToken()

                                @Html.HiddenFor(model => model.CityId, new { Value = User.Identity.GetCityId() })

                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <label>City</label>
                                            <input class="form-control" value="@User.Identity.GetCityName()" readonly />
                                            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <label>Hospital Name</label>
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="window-footer window-footer-btn">
                    <div class="col-md-12" style="text-align:right;">
                        <button class="btn btn-primary" type="submit" form="form">Add</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
